apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/part-of: multiarch-tuning-operator
    app.kubernetes.io/managed-by: kustomize
    # See https://github.com/openshift/enhancements/blob/c5b9aea25e/enhancements/workload-partitioning/management-workload-partitioning.md
    workload.openshift.io/allowed: management
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/part-of: multiarch-tuning-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 2
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        # See https://github.com/openshift/enhancements/blob/c5b9aea25e2a7afd5f460c6a0eca7584b1685ce3/enhancements/workload-partitioning/management-workload-partitioning.md
        target.workload.openshift.io/management: |
          {"effect": "PreferredDuringScheduling"}
      labels:
        control-plane: controller-manager
    spec:
      automountServiceAccountToken: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                    - ppc64le
                    - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - "--health-probe-bind-address=:8081"
          - "--metrics-bind-address=:8443"
          - "--leader-elect"
          - "--enable-operator"
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: IMAGE
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['multiarch.openshift.io/image']
        image: controller:latest
        imagePullPolicy: Always
        name: manager
        ports:
        - containerPort: 8081
          name: health
          protocol: TCP
        - containerPort: 8443
          name: https # This should be "metrics", but the automated bundle generation tooling requires the name to be https
          # for backwards compatibility with the previous version of kubebuilder that used kube-rbac-proxy
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/manager/tls
          name: multiarch-tuning-operator-controller-manager-service-cert
          readOnly: true
        - mountPath: /etc/ssl/certs/
          name: ca-projected-volume
          readOnly: true
      priorityClassName: system-cluster-critical
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: multiarch-tuning-operator-controller-manager-service-cert
          secret:
            secretName: multiarch-tuning-operator-controller-manager-service-cert
            defaultMode: 420
        - name: ca-projected-volume
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: kube-root-ca.crt
